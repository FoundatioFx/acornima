using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using Acornima.Helpers;

namespace Acornima.Jsx;

// https://github.com/acornjs/acorn-jsx/blob/f5c107b85872230d5016dbb97d71788575cda9c3/xhtml.js

internal static class Xhtml
{
    public const int EntityMaxLength = 8;

#if DEBUG
    static Xhtml()
    {
        Debug.Assert(EntityMaxLength == Entities.Keys.Max(key => key.Length), $"{nameof(EntityMaxLength)} is not out of sync with the contents of {nameof(Entities)}.");
    }
#endif

    public static readonly Dictionary<ReadOnlyMemory<char>, string> Entities = new(StringSliceEqualityComparer.Instance)
    {
        ["quot".AsMemory()] = "\u0022",
        ["amp".AsMemory()] = "&",
        ["apos".AsMemory()] = "\u0027",
        ["lt".AsMemory()] = "<",
        ["gt".AsMemory()] = ">",
        ["nbsp".AsMemory()] = "\u00A0",
        ["iexcl".AsMemory()] = "\u00A1",
        ["cent".AsMemory()] = "\u00A2",
        ["pound".AsMemory()] = "\u00A3",
        ["curren".AsMemory()] = "\u00A4",
        ["yen".AsMemory()] = "\u00A5",
        ["brvbar".AsMemory()] = "\u00A6",
        ["sect".AsMemory()] = "\u00A7",
        ["uml".AsMemory()] = "\u00A8",
        ["copy".AsMemory()] = "\u00A9",
        ["ordf".AsMemory()] = "\u00AA",
        ["laquo".AsMemory()] = "\u00AB",
        ["not".AsMemory()] = "\u00AC",
        ["shy".AsMemory()] = "\u00AD",
        ["reg".AsMemory()] = "\u00AE",
        ["macr".AsMemory()] = "\u00AF",
        ["deg".AsMemory()] = "\u00B0",
        ["plusmn".AsMemory()] = "\u00B1",
        ["sup2".AsMemory()] = "\u00B2",
        ["sup3".AsMemory()] = "\u00B3",
        ["acute".AsMemory()] = "\u00B4",
        ["micro".AsMemory()] = "\u00B5",
        ["para".AsMemory()] = "\u00B6",
        ["middot".AsMemory()] = "\u00B7",
        ["cedil".AsMemory()] = "\u00B8",
        ["sup1".AsMemory()] = "\u00B9",
        ["ordm".AsMemory()] = "\u00BA",
        ["raquo".AsMemory()] = "\u00BB",
        ["frac14".AsMemory()] = "\u00BC",
        ["frac12".AsMemory()] = "\u00BD",
        ["frac34".AsMemory()] = "\u00BE",
        ["iquest".AsMemory()] = "\u00BF",
        ["Agrave".AsMemory()] = "\u00C0",
        ["Aacute".AsMemory()] = "\u00C1",
        ["Acirc".AsMemory()] = "\u00C2",
        ["Atilde".AsMemory()] = "\u00C3",
        ["Auml".AsMemory()] = "\u00C4",
        ["Aring".AsMemory()] = "\u00C5",
        ["AElig".AsMemory()] = "\u00C6",
        ["Ccedil".AsMemory()] = "\u00C7",
        ["Egrave".AsMemory()] = "\u00C8",
        ["Eacute".AsMemory()] = "\u00C9",
        ["Ecirc".AsMemory()] = "\u00CA",
        ["Euml".AsMemory()] = "\u00CB",
        ["Igrave".AsMemory()] = "\u00CC",
        ["Iacute".AsMemory()] = "\u00CD",
        ["Icirc".AsMemory()] = "\u00CE",
        ["Iuml".AsMemory()] = "\u00CF",
        ["ETH".AsMemory()] = "\u00D0",
        ["Ntilde".AsMemory()] = "\u00D1",
        ["Ograve".AsMemory()] = "\u00D2",
        ["Oacute".AsMemory()] = "\u00D3",
        ["Ocirc".AsMemory()] = "\u00D4",
        ["Otilde".AsMemory()] = "\u00D5",
        ["Ouml".AsMemory()] = "\u00D6",
        ["times".AsMemory()] = "\u00D7",
        ["Oslash".AsMemory()] = "\u00D8",
        ["Ugrave".AsMemory()] = "\u00D9",
        ["Uacute".AsMemory()] = "\u00DA",
        ["Ucirc".AsMemory()] = "\u00DB",
        ["Uuml".AsMemory()] = "\u00DC",
        ["Yacute".AsMemory()] = "\u00DD",
        ["THORN".AsMemory()] = "\u00DE",
        ["szlig".AsMemory()] = "\u00DF",
        ["agrave".AsMemory()] = "\u00E0",
        ["aacute".AsMemory()] = "\u00E1",
        ["acirc".AsMemory()] = "\u00E2",
        ["atilde".AsMemory()] = "\u00E3",
        ["auml".AsMemory()] = "\u00E4",
        ["aring".AsMemory()] = "\u00E5",
        ["aelig".AsMemory()] = "\u00E6",
        ["ccedil".AsMemory()] = "\u00E7",
        ["egrave".AsMemory()] = "\u00E8",
        ["eacute".AsMemory()] = "\u00E9",
        ["ecirc".AsMemory()] = "\u00EA",
        ["euml".AsMemory()] = "\u00EB",
        ["igrave".AsMemory()] = "\u00EC",
        ["iacute".AsMemory()] = "\u00ED",
        ["icirc".AsMemory()] = "\u00EE",
        ["iuml".AsMemory()] = "\u00EF",
        ["eth".AsMemory()] = "\u00F0",
        ["ntilde".AsMemory()] = "\u00F1",
        ["ograve".AsMemory()] = "\u00F2",
        ["oacute".AsMemory()] = "\u00F3",
        ["ocirc".AsMemory()] = "\u00F4",
        ["otilde".AsMemory()] = "\u00F5",
        ["ouml".AsMemory()] = "\u00F6",
        ["divide".AsMemory()] = "\u00F7",
        ["oslash".AsMemory()] = "\u00F8",
        ["ugrave".AsMemory()] = "\u00F9",
        ["uacute".AsMemory()] = "\u00FA",
        ["ucirc".AsMemory()] = "\u00FB",
        ["uuml".AsMemory()] = "\u00FC",
        ["yacute".AsMemory()] = "\u00FD",
        ["thorn".AsMemory()] = "\u00FE",
        ["yuml".AsMemory()] = "\u00FF",
        ["OElig".AsMemory()] = "\u0152",
        ["oelig".AsMemory()] = "\u0153",
        ["Scaron".AsMemory()] = "\u0160",
        ["scaron".AsMemory()] = "\u0161",
        ["Yuml".AsMemory()] = "\u0178",
        ["fnof".AsMemory()] = "\u0192",
        ["circ".AsMemory()] = "\u02C6",
        ["tilde".AsMemory()] = "\u02DC",
        ["Alpha".AsMemory()] = "\u0391",
        ["Beta".AsMemory()] = "\u0392",
        ["Gamma".AsMemory()] = "\u0393",
        ["Delta".AsMemory()] = "\u0394",
        ["Epsilon".AsMemory()] = "\u0395",
        ["Zeta".AsMemory()] = "\u0396",
        ["Eta".AsMemory()] = "\u0397",
        ["Theta".AsMemory()] = "\u0398",
        ["Iota".AsMemory()] = "\u0399",
        ["Kappa".AsMemory()] = "\u039A",
        ["Lambda".AsMemory()] = "\u039B",
        ["Mu".AsMemory()] = "\u039C",
        ["Nu".AsMemory()] = "\u039D",
        ["Xi".AsMemory()] = "\u039E",
        ["Omicron".AsMemory()] = "\u039F",
        ["Pi".AsMemory()] = "\u03A0",
        ["Rho".AsMemory()] = "\u03A1",
        ["Sigma".AsMemory()] = "\u03A3",
        ["Tau".AsMemory()] = "\u03A4",
        ["Upsilon".AsMemory()] = "\u03A5",
        ["Phi".AsMemory()] = "\u03A6",
        ["Chi".AsMemory()] = "\u03A7",
        ["Psi".AsMemory()] = "\u03A8",
        ["Omega".AsMemory()] = "\u03A9",
        ["alpha".AsMemory()] = "\u03B1",
        ["beta".AsMemory()] = "\u03B2",
        ["gamma".AsMemory()] = "\u03B3",
        ["delta".AsMemory()] = "\u03B4",
        ["epsilon".AsMemory()] = "\u03B5",
        ["zeta".AsMemory()] = "\u03B6",
        ["eta".AsMemory()] = "\u03B7",
        ["theta".AsMemory()] = "\u03B8",
        ["iota".AsMemory()] = "\u03B9",
        ["kappa".AsMemory()] = "\u03BA",
        ["lambda".AsMemory()] = "\u03BB",
        ["mu".AsMemory()] = "\u03BC",
        ["nu".AsMemory()] = "\u03BD",
        ["xi".AsMemory()] = "\u03BE",
        ["omicron".AsMemory()] = "\u03BF",
        ["pi".AsMemory()] = "\u03C0",
        ["rho".AsMemory()] = "\u03C1",
        ["sigmaf".AsMemory()] = "\u03C2",
        ["sigma".AsMemory()] = "\u03C3",
        ["tau".AsMemory()] = "\u03C4",
        ["upsilon".AsMemory()] = "\u03C5",
        ["phi".AsMemory()] = "\u03C6",
        ["chi".AsMemory()] = "\u03C7",
        ["psi".AsMemory()] = "\u03C8",
        ["omega".AsMemory()] = "\u03C9",
        ["thetasym".AsMemory()] = "\u03D1",
        ["upsih".AsMemory()] = "\u03D2",
        ["piv".AsMemory()] = "\u03D6",
        ["ensp".AsMemory()] = "\u2002",
        ["emsp".AsMemory()] = "\u2003",
        ["thinsp".AsMemory()] = "\u2009",
        ["zwnj".AsMemory()] = "\u200C",
        ["zwj".AsMemory()] = "\u200D",
        ["lrm".AsMemory()] = "\u200E",
        ["rlm".AsMemory()] = "\u200F",
        ["ndash".AsMemory()] = "\u2013",
        ["mdash".AsMemory()] = "\u2014",
        ["lsquo".AsMemory()] = "\u2018",
        ["rsquo".AsMemory()] = "\u2019",
        ["sbquo".AsMemory()] = "\u201A",
        ["ldquo".AsMemory()] = "\u201C",
        ["rdquo".AsMemory()] = "\u201D",
        ["bdquo".AsMemory()] = "\u201E",
        ["dagger".AsMemory()] = "\u2020",
        ["Dagger".AsMemory()] = "\u2021",
        ["bull".AsMemory()] = "\u2022",
        ["hellip".AsMemory()] = "\u2026",
        ["permil".AsMemory()] = "\u2030",
        ["prime".AsMemory()] = "\u2032",
        ["Prime".AsMemory()] = "\u2033",
        ["lsaquo".AsMemory()] = "\u2039",
        ["rsaquo".AsMemory()] = "\u203A",
        ["oline".AsMemory()] = "\u203E",
        ["frasl".AsMemory()] = "\u2044",
        ["euro".AsMemory()] = "\u20AC",
        ["image".AsMemory()] = "\u2111",
        ["weierp".AsMemory()] = "\u2118",
        ["real".AsMemory()] = "\u211C",
        ["trade".AsMemory()] = "\u2122",
        ["alefsym".AsMemory()] = "\u2135",
        ["larr".AsMemory()] = "\u2190",
        ["uarr".AsMemory()] = "\u2191",
        ["rarr".AsMemory()] = "\u2192",
        ["darr".AsMemory()] = "\u2193",
        ["harr".AsMemory()] = "\u2194",
        ["crarr".AsMemory()] = "\u21B5",
        ["lArr".AsMemory()] = "\u21D0",
        ["uArr".AsMemory()] = "\u21D1",
        ["rArr".AsMemory()] = "\u21D2",
        ["dArr".AsMemory()] = "\u21D3",
        ["hArr".AsMemory()] = "\u21D4",
        ["forall".AsMemory()] = "\u2200",
        ["part".AsMemory()] = "\u2202",
        ["exist".AsMemory()] = "\u2203",
        ["empty".AsMemory()] = "\u2205",
        ["nabla".AsMemory()] = "\u2207",
        ["isin".AsMemory()] = "\u2208",
        ["notin".AsMemory()] = "\u2209",
        ["ni".AsMemory()] = "\u220B",
        ["prod".AsMemory()] = "\u220F",
        ["sum".AsMemory()] = "\u2211",
        ["minus".AsMemory()] = "\u2212",
        ["lowast".AsMemory()] = "\u2217",
        ["radic".AsMemory()] = "\u221A",
        ["prop".AsMemory()] = "\u221D",
        ["infin".AsMemory()] = "\u221E",
        ["ang".AsMemory()] = "\u2220",
        ["and".AsMemory()] = "\u2227",
        ["or".AsMemory()] = "\u2228",
        ["cap".AsMemory()] = "\u2229",
        ["cup".AsMemory()] = "\u222A",
        ["int".AsMemory()] = "\u222B",
        ["there4".AsMemory()] = "\u2234",
        ["sim".AsMemory()] = "\u223C",
        ["cong".AsMemory()] = "\u2245",
        ["asymp".AsMemory()] = "\u2248",
        ["ne".AsMemory()] = "\u2260",
        ["equiv".AsMemory()] = "\u2261",
        ["le".AsMemory()] = "\u2264",
        ["ge".AsMemory()] = "\u2265",
        ["sub".AsMemory()] = "\u2282",
        ["sup".AsMemory()] = "\u2283",
        ["nsub".AsMemory()] = "\u2284",
        ["sube".AsMemory()] = "\u2286",
        ["supe".AsMemory()] = "\u2287",
        ["oplus".AsMemory()] = "\u2295",
        ["otimes".AsMemory()] = "\u2297",
        ["perp".AsMemory()] = "\u22A5",
        ["sdot".AsMemory()] = "\u22C5",
        ["lceil".AsMemory()] = "\u2308",
        ["rceil".AsMemory()] = "\u2309",
        ["lfloor".AsMemory()] = "\u230A",
        ["rfloor".AsMemory()] = "\u230B",
        ["lang".AsMemory()] = "\u2329",
        ["rang".AsMemory()] = "\u232A",
        ["loz".AsMemory()] = "\u25CA",
        ["spades".AsMemory()] = "\u2660",
        ["clubs".AsMemory()] = "\u2663",
        ["hearts".AsMemory()] = "\u2665",
        ["diams".AsMemory()] = "\u2666",
    };
}
